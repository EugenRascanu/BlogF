{"version":3,"sources":["components/Header/styles.ts","components/Api/index.tsx","components/Header/index.tsx","assets/loading.svg","components/Loading/styles.ts","components/Loading/index.tsx","pages/Home/syles.ts","pages/Home/index.tsx","styles/global.ts","pages/Page404/index.tsx","pages/Post/styles.ts","pages/Post/index.tsx","pages/PostList/styles.ts","pages/PostList/index.tsx","routers/index.tsx","components/Title/index.tsx","components/AboutMe/styles.ts","components/AboutMe/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","header","Content","div","Logo","h1","Nav","nav","api","axios","create","baseURL","Header","dataBlog","useState","menus","setMenus","getNav","a","get","data","useEffect","to","undefined","logo","src","alt","nameBlog","id","map","menu","className","slug","name","subcategory","length","Img","img","Loading","LoadingSvg","PostDiv","ImgPost","Title","span","Home","useParams","post","setPost","isLoading","setIsLoading","console","log","getSystemData","p","picture","title","Intl","DateTimeFormat","year","month","day","format","Date","parse","create_at","read_time","views","dangerouslySetInnerHTML","__html","content","slice","GlobalStyle","createGlobalStyle","Page404","Post","ImgTop","Posts","patch","PostsSpan","PostList","category","postList","setPostList","Routers","exact","path","component","TitleComponent","ImgPerfil","ContentAboutMe","AboutMe","isReadMore","setIsReadMore","aboutMeData","setAboutMeData","toggleReadMore","getAboutMeData","ab","img_perfil","about","onClick","href","facebook_url","twitter_url","instagram_url","youtube_url","github_url","linkedin_url","App","blogData","setBlogData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cab06343.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.header`\n  background: var(--dark-900);\n  color: var(--white);\n  position: fixed;\n  width: 100%;\n  font-size: 18px;\n  font-weight: 300;\n  top: 0;\n  z-index: 1;\n  a {\n    text-decoration: none;\n    display: block;\n    text-align: left;\n    color: var(--white);\n  }\n`;\n\nexport const Content = styled.div`\n  max-width: 1220px;\n  margin: 0 auto;\n  display: flex;\n  height: 60px;\n  align-items: center;\n`;\nexport const Logo = styled.h1`\n  width: calc(100% / 5);\n\n  img {\n    max-width: 40px;\n    padding: 5px;\n  }\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  flex: 1;\n  height: 100%;\n  a {\n    color: var(--white);\n    display: flex;\n    align-items: center;\n    padding: 0 20px 0 20px;\n    text-decoration: none;\n    transition: color 0.3s;\n    &:hover {\n      color: var(--green-600);\n    }\n  }\n  .dropdown {\n    overflow: hidden;\n    margin: auto;\n  }\n\n  .dropdown span {\n    font-size: 16px;\n    border: none;\n    outline: none;\n    color: white;\n    padding: 14px 16px;\n    background: var(--dark-900);\n    font-family: inherit;\n  }\n\n  .dropdown-content {\n    display: none;\n    position: absolute;\n    background: var(--dark-900);\n    min-width: 160px;\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n    z-index: 1;\n  }\n\n  .dropdown-content a {\n    float: none;\n    padding: 12px 16px;\n    height: 100%;\n  }\n\n  .dropdown-content a:hover {\n    background: var(--dark-700);\n  }\n\n  .dropdown:hover .dropdown-content {\n    display: block;\n  }\n`;\n","import axios from \"axios\";\n\nexport  const api = axios.create({\n    baseURL: \"http://127.0.0.1:8000/\",\n  });\n\n","import { Container, Content, Logo, Nav } from \"./styles\";\nimport { useState, useEffect } from \"react\";\nimport { api } from \"../Api\";\nimport { Link } from \"react-router-dom\";\ninterface NewMenu {\n  id: number;\n  name: string;\n  slug: string;\n  parent: number;\n  subcategory: [\n    {\n      id: number;\n      name: string;\n      slug: string;\n      parent: number;\n    }\n  ];\n}\n\ninterface NewBlogData {\n  logo?: string;\n  alt?: string;\n  nameBlog?: string;\n}\n\nexport function Header(dataBlog: NewBlogData) {\n  const [menus, setMenus] = useState<NewMenu[]>([]);\n  const getNav = async () => {\n    try {\n      const { data } = await api.get(\"category/\");\n      setMenus(data);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    getNav();\n  }, []);\n\n  return (\n    <Container>\n      <Content>\n        <Logo>\n          <Link to=\"/\">\n            {dataBlog.logo !== undefined ? (\n              <img src={dataBlog.logo} alt={dataBlog.alt} />\n            ) : (\n              \"\"\n            )}\n            {dataBlog.nameBlog !== undefined ? dataBlog.nameBlog : \"\"}\n          </Link>\n        </Logo>\n        <Nav id=\"nav\">\n          {menus.map((menu) => (\n            <span className=\"dropdown\" key={menu.id}>\n              <Link to={\"/category/\" + menu.slug} key={menu.id}>\n                {menu.name}\n              </Link>\n\n              {menu.subcategory.length > 0 ? (\n                <span className=\"dropdown-content\" id=\"dropdown-content\">\n                  {menu.subcategory.map((subcategory) => (\n                    <Link\n                      to={\"/category/\" + subcategory.slug}\n                      key={subcategory.id}\n                    >\n                      {subcategory.name}\n                    </Link>\n                  ))}\n                </span>\n              ) : (\n                \"\"\n              )}\n            </span>\n          ))}\n        </Nav>\n      </Content>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/loading.65fe500b.svg\";","import styled from \"styled-components\";\n\nexport const Img = styled.img`\n  display: flex;\n  margin: auto;\n`;\n","import LoadingSvg from \"../../assets/loading.svg\";\nimport { Img } from \"./styles\";\n\nexport default function Loading() {\n  return <Img src={LoadingSvg} alt=\"Loading\" />;\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 5px;\n  max-width: 1220px;\n  margin: 0 auto 0;\n  flex-grow: 4;\n  height: 20rem;\n`;\n\nexport const PostDiv = styled.div`\n  background: var(--white);\n  width: 17.5rem;\n  text-align: center;\n  border-radius: 1rem;\n  margin-bottom: 1rem;\n  \n\n  \n  @media (max-width: 830px) {\n    text-align: left;\n    width: 100%;\n   \n  }\n  }\n  div {\n    padding: 1rem;\n    @media (max-width: 830px) {\n    display: flex;\n    align-items: center;\n   \n  }\n    ul {\n        \n      \n      li {\n        font-size: 0.7rem;\n        display: inline-block;\n        list-style-type: none;\n        padding: 0.3rem;\n\n        span {\n          margin-left: 0.5rem;\n          \n        }\n        \n        }\n      }\n      \n      \n    }\n    a{\n            text-decoration: none;\n            color: var(--dark-900);\n            transition: color 0.5s;\n            :hover{\n                color: var(--green-600);\n            }\n        }\n`;\n\nexport const ImgPost = styled.img`\n  align-items: center;\n  max-width: 100px;\n  border-radius: 1rem;\n  transition: filter 0.5s;\n  :hover {\n    filter: opacity(70%);\n  }\n`;\nexport const Title = styled.span`\n  display: block;\n  font-size: 1.2rem;\n  margin-left: 1rem;\n`;\n","import { useEffect, useState } from \"react\";\nimport { Redirect, useParams } from \"react-router\";\nimport { api } from \"../../components/Api\";\nimport Loading from \"../../components/Loading\";\nimport { BsCalendar, BsClockHistory, BsEye } from \"react-icons/bs\";\nimport { Container, ImgPost, PostDiv, Title } from \"./syles\";\nimport { Link } from \"react-router-dom\";\n\ninterface slug {\n  slug: string;\n}\n\ninterface PostData {\n  id: number;\n  title: string;\n  content: string;\n  create_at: string;\n  slug: string;\n  views: string;\n  read_time: string;\n  category: [id: number, name: string, slug: string];\n  picture: string;\n}\nexport default function Home() {\n  const { slug }: slug = useParams();\n  const [post, setPost] = useState<PostData[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const getSystemData = async () => {\n      try {\n        const { data } = await api.get(\"post/\");\n        setPost(data);\n        console.log(data);\n        setIsLoading(false);\n      } catch (error) {}\n    };\n    getSystemData();\n  }, [slug]);\n  return (\n    <Container>\n      {isLoading ? (\n        <>\n          <Loading />\n        </>\n      ) : post.length !== 0 ? (\n        post.map((p) => (\n          <PostDiv>\n            <div key={p.title}>\n              <Link to={\"post/\" + p.slug}>\n                {p.picture && <ImgPost src={p.picture} alt={p.title} />}\n                <Title>{p.title}</Title>\n              </Link>\n              <ul>\n                <li>\n                  <BsCalendar />\n                  <span>\n                    {new Intl.DateTimeFormat(\"en-US\", {\n                      year: \"numeric\",\n                      month: \"short\",\n                      day: \"2-digit\",\n                    }).format(Date.parse(p.create_at))}\n                  </span>\n                </li>\n\n                <li>\n                  <BsClockHistory />\n                  <span>{p.read_time}</span>\n                </li>\n                <li>\n                  <BsEye />\n                  <span>{p.views}</span>\n                </li>\n              </ul>\n              <div\n                className=\"tooltip product-details\"\n                dangerouslySetInnerHTML={{\n                  __html: p.content.slice(0, 150),\n                }}\n              ></div>\n            </div>\n          </PostDiv>\n        ))\n      ) : (\n        <Redirect to=\"/404\" />\n      )}\n    </Container>\n  );\n}\n","import styled, { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    :root{\n        --dark-900: #20232a;\n        --dark-700: #373940;\n        --dark-050: #f9f9f9;\n        --white: #ffffff;\n        --green-600: #61E21D\n    }\n    *{\n        margin:0;\n        padding: 0;\n        box-sizing: border-box;\n        font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\n        \n    }\n    body{\n      background: var(--dark-050);\n    }\n`;\nexport const Container = styled.div``;\n\nexport const Content = styled.div`\n  max-width: 1220px;\n  margin: 0rem auto 2rem;\n  background: var(--white);\n  padding: 1rem 3rem;\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);\n  a {\n    text-decoration: none;\n    display: block;\n    text-align: left;\n    color: var(--dark-700);\n  }\n\n  &.about {\n    margin: 5rem auto 2rem;\n  }\n`;\n","import { Container, Content } from \"../../styles/global\";\nexport default function Page404() {\n  return (\n    <Container>\n      <Content>\n        <h1>Page404 - Page Not Found</h1>\n      </Content>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Post = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  }\n  ul {\n    display: flex;\n    justify-content: center;\n    li {\n      list-style-type: none;\n      padding: 1rem 0 1rem 1rem;\n      color: #999;\n      span {\n        padding-left: 0.3rem;\n      }\n    }\n  }\n  p{\n    padding: 0.2rem;\n  }\n`;\n\nexport const ImgTop = styled.img`\n  width: 50rem;\n  max-width: 90%;\n  border-radius: 1rem;\n  margin-bottom: 1rem;\n`;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport { api } from \"../../components/Api\";\nimport Loading from \"../../components/Loading\";\nimport { Container, Content } from \"../../styles/global\";\nimport { ImgTop, Post } from \"./styles\";\nimport { BsCalendar, BsClockHistory, BsEye } from \"react-icons/bs\";\ninterface slug {\n  slug: string;\n}\n\ninterface PostData {\n  id: number;\n  title: string;\n  content: string;\n  create_at: string;\n  slug: string;\n  views: string;\n  read_time: string;\n  category: [id: number, name: string, slug: string];\n  picture: string;\n}\nexport default function Posts() {\n  const { slug }: slug = useParams();\n  const [post, setPost] = useState<PostData[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const getSystemData = async () => {\n      try {\n        const { data } = await api.get(\"post/?slug=\" + slug);\n        setPost(data);\n        console.log(data);\n        setIsLoading(false);\n        if (data.length !== 0) {\n          await api.patch(\"post/\" + data[0].id, { views: data[0].views + 1 });\n        }\n      } catch (error) {}\n    };\n    getSystemData();\n  }, [slug]);\n\n  return (\n    <Container>\n      <Content>\n        {isLoading ? (\n          <>\n            <Loading />\n          </>\n        ) : post.length !== 0 ? (\n          post.map((p) => (\n            <Post key={p.title}>\n              <h1>{p.title}</h1>\n              <ul>\n                <li>\n                  <BsCalendar />\n                  <span>\n                    {new Intl.DateTimeFormat(\"en-US\", {\n                      year: \"numeric\",\n                      month: \"short\",\n                      day: \"2-digit\",\n                    }).format(Date.parse(p.create_at))}\n                  </span>\n                </li>\n\n                <li>\n                  <BsClockHistory />\n                  <span>{p.read_time}</span>\n                </li>\n                <li>\n                  <BsEye />\n                  <span>{p.views + 1}</span>\n                </li>\n              </ul>\n              {p.picture && <ImgTop src={p.picture} alt={p.title} />}\n              <div\n                className=\"tooltip product-details\"\n                dangerouslySetInnerHTML={{\n                  __html: p.content,\n                }}\n              ></div>\n            </Post>\n          ))\n        ) : (\n          <Redirect to=\"/404\" />\n        )}\n      </Content>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const PostDiv = styled.div`\n  display: flex;\n  align-items: center;\n  ul {\n    display: flex;\n    justify-content: center;\n    li {\n      margin-top: 1rem;\n      list-style-type: none;\n      padding: 0.3rem 0 1rem 1rem;\n      color: #999;\n      span {\n        padding-left: 0.3rem;\n      }\n    }\n  }\n`;\nexport const PostsSpan = styled.span`\n  font-size: 2rem;\n  display: flex;\n  justify-content: center;\n`;\nexport const Title = styled.span`\n  margin-left: 1rem;\n  font-size: 1.5rem;\n  transition: filter 0.5s;\n  :hover {\n    color: var(--green-600);\n  }\n`;\nexport const ImgTop = styled.img`\n  align-items: center;\n  max-width: 100px;\n  border-radius: 1rem;\n`;\n","import { Container, Content } from \"../../styles/global\";\nimport Loading from \"../../components/Loading\";\nimport { useEffect, useState } from \"react\";\nimport { api } from \"../../components/Api\";\nimport { Redirect, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { ImgTop, PostDiv, PostsSpan, Title } from \"./styles\";\nimport { BsCalendar, BsClockHistory, BsEye } from \"react-icons/bs\";\ninterface Category {\n  category: string;\n}\n\ninterface PostData {\n  id: number;\n  title: string;\n  content: string;\n  create_at: string;\n  slug: string;\n  views: string;\n  category: [id: number, name: string, slug: string];\n  read_time: string;\n  picture: string;\n}\n\nexport default function PostList() {\n  const { category }: Category = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [postList, setPostList] = useState<PostData[]>([]);\n\n  useEffect(() => {\n    const getSystemData = async () => {\n      try {\n        const { data } = await api.get(\"post/?category__slug=\" + category);\n        setPostList(data);\n        setIsLoading(false);\n      } catch (error) {}\n    };\n    getSystemData();\n  }, [category]);\n\n  return (\n    <Container>\n      <Content>\n        <PostsSpan>Posts</PostsSpan>\n        {isLoading ? (\n          <Loading />\n        ) : postList.length !== 0 ? (\n          postList.map((p) => (\n            <PostDiv key={p.title}>\n              {p.picture && <ImgTop src={p.picture} alt={p.title} />}\n              <Link to={\"/post/\" + p.slug}>\n                <Title>{p.title}</Title>\n              </Link>\n              <ul>\n                <li>\n                  <BsCalendar />\n                  <span>\n                    {new Intl.DateTimeFormat(\"en-US\", {\n                      year: \"numeric\",\n                      month: \"short\",\n                      day: \"2-digit\",\n                    }).format(Date.parse(p.create_at))}\n                  </span>\n                </li>\n\n                <li>\n                  <BsClockHistory />\n                  <span>{p.read_time}</span>\n                </li>\n                <li>\n                  <BsEye />\n                  <span>{p.views + 1}</span>\n                </li>\n              </ul>\n            </PostDiv>\n          ))\n        ) : (\n          <Redirect to=\"/404\" />\n        )}\n      </Content>\n    </Container>\n  );\n}\n","import { Switch, Route } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Page404 from \"../pages/Page404\";\nimport Posts from \"../pages/Post\";\nimport PostList from \"../pages/PostList\";\n\nexport default function Routers() {\n  return (\n    <Switch>\n      <Route exact={true} path=\"/\" component={Home} />\n\n      <Route exact={true} path=\"/post\" component={Posts} />\n      <Route exact={true} path=\"/post/:slug\" component={Posts} />\n\n      <Route path=\"/404\" component={Page404} />\n      <Route exact={true} path=\"/category\" component={PostList} />\n      <Route exact={true} path=\"/category/:category\" component={PostList} />\n\n      <Route path=\"*\" exact={true} component={Page404} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\ninterface Title{\n    title?: string;\n}\n\nexport const TitleComponent = ({title} :Title) => {\n    var defaultTitle = 'Blog';\n    return (\n\n        <HelmetProvider>\n        <Helmet>\n        <title>{title ? title : defaultTitle}</title>\n        </Helmet>\n        </HelmetProvider>\n    );\n};\n\n","import styled from \"styled-components\";\n\nexport const ImgPerfil = styled.img`\n  max-width: 100px;\n  border-radius: 3rem;\n`;\n\nexport const ContentAboutMe = styled.div`\n  display: flex;\n  \n  }\n  .social-media {\n    font-size: 1.5rem;\n    filter: opacity(45%);\n    display: flex;\n    \n        a{\n          transition: color 0.3s;\n            display: inline-block;\n            :hover {\n            color: var(--green-600);\n  }\n        }\n    }\n\n    .info {\n    padding: 1rem;\n    }\n\n    span {\n      font-size: 1rem;\n      filter: opacity(45%);\n      display: inline;\n\n    }\n`;\n","import { useEffect, useState } from \"react\";\nimport { Container, Content } from \"../../styles/global\";\nimport { api } from \"../Api\";\nimport {\n  AiOutlineTwitter,\n  AiFillFacebook,\n  AiFillInstagram,\n  AiFillYoutube,\n  AiFillGithub,\n  AiFillLinkedin,\n} from \"react-icons/ai\";\nimport { ContentAboutMe, ImgPerfil } from \"./styles\";\n\ninterface NewAboutMe {\n  id: number;\n  name: string;\n  img_perfil: string;\n  about: string;\n  brief: string;\n  facebook_url: string;\n  twitter_url: string;\n  instagram_url: string;\n  youtube_url: string;\n  github_url: string;\n  linkedin_url: string;\n}\n\nexport default function AboutMe() {\n  const [isReadMore, setIsReadMore] = useState(true);\n  const [aboutMeData, setAboutMeData] = useState<NewAboutMe[]>([]);\n  const toggleReadMore = () => {\n    setIsReadMore(!isReadMore);\n  };\n\n  useEffect(() => {\n    const getAboutMeData = async () => {\n      try {\n        const { data } = await api.get(\"about-me/\");\n        setAboutMeData(data);\n      } catch (error) {}\n    };\n    getAboutMeData();\n  }, []);\n\n  return (\n    <Container>\n      <Content className=\"about\">\n        {aboutMeData.map((ab) => (\n          <ContentAboutMe key={ab.id}>\n            <div>\n              <ImgPerfil src={ab.img_perfil} alt=\"img\" />\n            </div>\n            <div className=\"info\">\n              <h2>{ab.name}</h2>\n              {isReadMore ? ab.about.slice(0, 150) : ab.about}\n              <span onClick={toggleReadMore} className=\"read-or-hide\">\n                {isReadMore ? \"...read more\" : \" show less\"}\n              </span>\n\n              <span className=\"social-media\">\n                <a href={ab.facebook_url}>\n                  <AiFillFacebook />\n                </a>\n                <a href={ab.twitter_url}>\n                  <AiOutlineTwitter />\n                </a>\n                <a href={ab.instagram_url}>\n                  <AiFillInstagram />\n                </a>\n                <a href={ab.youtube_url}>\n                  <AiFillYoutube />\n                </a>\n                <a href={ab.github_url}>\n                  <AiFillGithub />\n                </a>\n                <a href={ab.linkedin_url}>\n                  <AiFillLinkedin />\n                </a>\n              </span>\n            </div>\n          </ContentAboutMe>\n        ))}\n      </Content>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Header } from \"./components/Header\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routers from \"./routers\";\nimport { TitleComponent } from \"./components/Title\";\nimport { api } from \"./components/Api\";\nimport AboutMe from \"./components/AboutMe\";\n\ninterface NewBlogData {\n  logo: string;\n  alt: string;\n  name: string;\n  title: string;\n}\n\nfunction App() {\n  const [blogData, setBlogData] = useState<NewBlogData[]>([]);\n  const getSystemData = async () => {\n    try {\n      const { data } = await api.get(\"blog-data/\");\n      setBlogData(data);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    getSystemData();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <TitleComponent title={blogData.length !== 0 ? blogData[0].title : \"\"} />\n      <Header\n        logo={blogData.length !== 0 ? blogData[0].logo : \"\"}\n        alt={blogData.length !== 0 ? blogData[0].alt : \"\"}\n        nameBlog={blogData.length !== 0 ? blogData[0].name : \"\"}\n      />\n\n      <AboutMe />\n      <Routers />\n    </BrowserRouter>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { GlobalStyle } from './styles/global';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GlobalStyle />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}